# Generated by Django 3.2.12 on 2022-04-07 15:50

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks
import wagtail.snippets.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0066_collection_management_permissions'),
        ('wagtailimages', '0023_add_choose_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='LandingPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('greeting', models.CharField(max_length=100, null=True)),
                ('lead_text', models.CharField(max_length=100, null=True)),
                ('buttons', wagtail.core.fields.StreamField([('buttons', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.CharBlock(help_text='Button text', max_length=50)), ('disabled', wagtail.core.blocks.BooleanBlock(default=False, help_text='Show button as disabled', required=False)), ('section_id', wagtail.core.blocks.CharBlock(help_text="Jump to section, i.e. 'about' jumps to #about on the same page", max_length=50))]))], blank=True, null=True)),
                ('download_buttons', wagtail.core.fields.StreamField([('buttons', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.CharBlock(help_text='Button text', max_length=50)), ('disabled', wagtail.core.blocks.BooleanBlock(default=False, help_text='Show button as disabled', required=False)), ('icon', wagtail.core.blocks.CharBlock(default='ai-arrow-down-circle mt-n1 me-2', help_text='Set a CSS class for the button icon', max_length=50))]))], blank=True, null=True)),
                ('body', wagtail.core.fields.StreamField([('usps', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(default='What I Do Best', help_text='Add your Unique Selling Points')), ('usps', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(help_text='Choose a title')), ('description', wagtail.core.blocks.TextBlock(help_text='Describe a Unique Selling Point', rows=2)), ('image', wagtail.images.blocks.ImageChooserBlock(help_text='Select image'))])))])), ('skill_cards', wagtail.core.blocks.StructBlock([('skill_cards', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('skill', wagtail.core.blocks.CharBlock(help_text='A personal skill to showcase on the page', max_length=100)), ('categories', wagtail.snippets.blocks.SnippetChooserBlock('blog.SkillCategory', required=False))])))])), ('testimonials', wagtail.core.blocks.StructBlock([('testimonials', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.TextBlock(help_text='Quote text')), ('author', wagtail.core.blocks.CharBlock(help_text='Author of quote'))])))])), ('testimonial', wagtail.snippets.blocks.SnippetChooserBlock(target_model='testimonials.Testimonial', template='streams/testimonial.html'))], blank=True, null=True)),
                ('image_carousel_enabled', models.BooleanField(default=False)),
                ('portfolio_carousel_enabled', models.BooleanField(default=False)),
                ('main_profile_picture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='HomePageCarouselImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('carousel_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='carousel_images', to='home.landingpage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
